name: ETL-final

x-airflow-common:
  &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
    AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}

x-common:
  &common-volumes
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/spark_scripts:/opt/airflow/scripts
    - spark:/opt/spark
    - airflow:/usr/local/airflow/db/:rw 


services:
  db_postgresql:
    container_name: postgres_app
    build: ./_CI/db/postgresql
    restart: always
    ports:
      - ${DB_POSTGRES_PORT_IN}:${DB_POSTGRES_PORT_OUT}
    environment:
      - POSTGRES_DB=${DB_POSTGRES_NAME_DB}
      - POSTGRES_USER=${DB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  db_mongo:
    build: ./_CI/db/mongo
    container_name: mongo_app
    ports:
      - ${DB_MONGO_PORT_IN}:${DB_MONGO_PORT_OUT}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db

  data_generator:
    container_name: data_generator_app
    build:
      context: ./
      dockerfile: ./_CI/generator/Dockerfile
    depends_on:
      - db_mongo

  airflow-init:
    build:
      context: ./
      dockerfile: ./_CI/airflow/init/Dockerfile
    restart: "no"
    environment:
      <<: *airflow-common-env
    volumes:
      - airflow:/usr/local/airflow/db/:rw

  airflow-webserver:
    image: apache/airflow:2.10.4-python3.12
    restart: always
    environment:
      <<: *airflow-common-env
    <<: *common-volumes
    ports:
      - "8080:8080"
    depends_on:
      - airflow-scheduler
      - airflow-init
    command: ["webserver"]

  airflow-scheduler:
    build:
      context: ./
      dockerfile: ./_CI/airflow/scheduler/Dockerfile
    restart: always
    environment:
      <<: *airflow-common-env
    <<: *common-volumes
    depends_on:
      - airflow-init

  spark:
    image: bitnami/spark:3.5.3
    restart: always
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_WEBUI_PORT=8081
    ports:
      - "8081:8081"
    <<: *common-volumes

  spark-worker:
    image: bitnami/spark:3.5.3
    restart: always
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:${SPARK_PORT}
    <<: *common-volumes
    depends_on:
      - spark

volumes:
  mongo_data:
  postgres_data:
  airflow:
  spark: